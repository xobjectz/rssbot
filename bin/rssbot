#!/usr/bin/env python3
# This file is placed in the Public Domain.


"main"


import getpass
import os
import pwd
import readline
import sys
import termios
import time


from rssbot.client  import Client, cmnd, parse_cmd, spl
from rssbot.command import add
from rssbot.default import Default
from rssbot.errors  import debug, enable, errors, later
from rssbot.event   import Event
from rssbot.object  import cdir
from rssbot.runtime import broker
from rssbot.workdir import Workdir, skel


from rssbot.command   import scan as scancmd
from rssbot.whitelist import scan as scancls


from rssbot import modules


Cfg             = Default()
Cfg.dis         = ""
Cfg.mod         = "cmd,irc,rss"
Cfg.opts        = ""
Cfg.name        = "rssbot"
Cfg.version     = "555"
Cfg.wdr         = os.path.expanduser(f"~/.{Cfg.name}")
Cfg.pidfile     = os.path.join(Cfg.wdr, f"{Cfg.name}.pid")


Workdir.workdir = Cfg.wdr


dte = time.ctime(time.time()).replace("  ", " ")


def scan(pkg, modstr, disable=""):
    "scan modules for commands and classes"
    mds = []
    for modname in spl(modstr):
        if skip(modname, disable):
            continue
        module = getattr(pkg, modname, None)
        if not module:
            continue
        scancmd(module)
        scancls(module)
    return mds


def privileges(username):
    "drop privileges."
    pwnam = pwd.getpwnam(username)
    os.setgid(pwnam.pw_gid)
    os.setuid(pwnam.pw_uid)


def skip(name, skipped):
    "check for skipping"
    for skp in spl(skipped):
        if skp in name:
            return True
    return False


def ver(event):
    "show version."
    event.reply(f"{Cfg.name.upper()} {Cfg.version}")


def main():
    "main"
    enable(print)
    add(ver)
    skel()
    parse_cmd(Cfg, " ".join(sys.argv[1:]))
    scan(modules, Cfg.mod)
    cmnd(Cfg.otxt, print)


if __name__ == "__main__":
    main()
    errors()
